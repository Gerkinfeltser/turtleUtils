local tArgs = {...}
local length = tonumber(tArgs[1]) or 5
local width = tonumber(tArgs[2]) or 3
local height = tonumber(tArgs[3]) or 3
-- local vpos = tonumber(tArgs[4]) or 1
local turnRight = true
local slot = 1

local function returnHome()
  if width % 2 == 0 and height % 2 == 0 then
    turtle.turnRight()
    turtle.turnRight()
    turtle.forward()
  elseif  width % 2 == 0 and height % 2 ~= 0 then
    turtle.turnRight()
    turtle.turnRight()
    turtle.forward()
    turtle.turnRight()
    for i=1, width do
      turtle.forward()
    end
    turtle.turnLeft()
  elseif width % 2 ~= 0 and height % 2 == 0 then
    turtle.turnRight()
    turtle.turnRight()
    turtle.forward()
  else
    for i=1, length do
      turtle.forward()
    end
    turtle.turnRight()
    for i=1, width do
      turtle.forward()
    end
    turtle.turnLeft()
  end
  -- go down/up
  for i=1, math.abs(vpos) do
    if vpos > 0 then
      turtle.up()
    else
      turtle.down()
    end
  end    
end

print("1. Place turtle in leftmost block space & make sure area for placing is clear.")
print("2. Load turtle with materials for fortuning.")
print("3. Type 'fbox <length> <width> <height>'") -- ' <desired height>'")
print("   *If LWH not passed, 5x3x3 will be used")
print("4. Get out of the way!")

turtle.select(slot)
--[[
turtle.forward()
for i=1, math.abs(vpos) do
  if vpos > 0 then
    turtle.up()
  else
    turtle.down()
  end
end
]]
-- Height
for k = 1, height do
  if k < height then
    turtle.up()
  end
  -- Width
  for j = 1, width do
    -- Length
    for i = 1, length do
      if turtle.getItemCount(slot) == 0 then
        slot = slot + 1
        if slot > 16 then
          slot = 1
        end
        turtle.select(slot)
        turtle.placeDown()
      else
        turtle.placeDown()
      end
      if i < length then
        turtle.forward()
      end
    end
    -- turn right or left
    if j < width then
      if turnRight == true then
        turtle.turnRight()
        turtle.forward()
        turtle.turnRight()
        turnRight = false
      else
        turtle.turnLeft()
        turtle.forward()
        turtle.turnLeft()
        turnRight = true
      end
    end
  end
  -- turn around
  turtle.turnRight()
  turtle.turnRight()
  -- Go left first if even width requested
  if width % 2 == 0 then
    turnRight = not turnRight
    if turnRight then
      print("going to turn right again")
    else
      print("going left this time")
    end
  end
end