
tArgs = {...}
farm = tArgs[1] or ender
sleepLength = tArgs[2] or 30
running = true

crop = {
	mellon = {digBlock = {name = "minecraft:melon_block", metadata = 0},
		goalItem = "minecraft:melon",
		goalSeed = nil},
	ender = {digBlock = {name = "ExtraUtilities:plant/ender_lilly", metadata = 7},
		goalItem = "minecraft:ender_pearl",
		goalSeed = "ExtraUtilities:plant/ender_lilly"}
}

local function cropList()
	local ret = {}
	for k,v in ipairs(crop) do
		table.insert(ret, tostring(crop[k]))
	end
	return table.concat(ret, ", ")
end

local function digIt()
	local success, data = turtle.inspectDown()
	if success and data.name == crop[farm].digBlock.name and data.metadata == crop[farm].digBlock.metadata then
		turtle.select(1)
		turtle.digDown()
		sleep(0.3)
		for i=1, 16 do
			local data = turtle.getItemDetail(i)
			if data ~= nil and data.name == crop[farm].goalItem then
				turtle.select(i)
				turtle.dropUp()
			end
		end
		sleep(0.3)
		if crop[farm].goalSeed ~= nil then
			for i=1, 16 do
				local data = turtle.getItemDetail(i)
				if data ~= nil and data.name == crop[farm].goalSeed then
					turtle.select(i)
					turtle.placeDown()
					return
				end
			end
		end
	end
	sleep(sleepLength)
end

term.clear()
term.setCursorPos(1,1)

if farm == nil then
	print("usage: cmd < mellon / ender >")
	running = false
end

while running do
	term.clear()
	term.setCursorPos(1,1)
	print("Mellon, mon!")
	print("Waiting for ".. crop[farm].digBlock.name.. ":".. crop[farm].digBlock.metadata)
	if crop[farm].goalSeed ~= nil then print("Replanting ".. crop[farm].goalSeed) end
	print("ctrl+R to reboot, bah-ee!")
	digIt()
end